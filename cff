OutputFile = "opf.dat";
seed = 1421523042;
system:
{
    //number of unit cells
    dim = [ 40 , 40 , 20 ];
    //The unit cell file
    //This file gives all of the information
    //on the locations of the magnetic system
    unitcellfile="Yury.ucf";
    //Number of k-points in each direction
    Nk = [ 2 , 2 , 8 ];
    //lattice constants
    abc = [ 300e-12 , 300e-12 , 2400e-12 ];
    //do we include the dipole-dipole calculation?
    include_dipole = TRUE;
    //3 options. CSR (good for CPU). fft (good for single species). DIA (good for GPU)
    Exchange_method="CSR";
    Dipole_method="fft";
    //if the exchange method is a sparse matrix multiplication
    //then you can specify if you have off-diagonal terms or not.
    //If not then they are ignored.
    Off_Diagonals = FALSE;
    //Do you want to output the unit cell info to the log file?
    log_unit_cell = FALSE;
    Periodic_Boundaries = [ TRUE , TRUE , FALSE ];
};
exchange:
{
    //Exchange reading method 
    //direct (by reading in all interactions directly)
    //permute (take a neighbour and calculate permutations)
    exchmethod="permute";
    //Outputs the entire matrix of interations
    OutputExchange=FALSE;
    //How are we to read in the exchange
    //- thisfile (read from the config file)
    //- extfile (read from an external file)
    exchinput="extfile";
    exchfile="exch.fcc";
    OutputExchangeMatrix=FALSE;
    ExitAfterExchangeMatrix=FALSE;
    ReadExchangeMatrix=TRUE;
};
sf:
{
    Calculate=FALSE;
    InputFile="sf.in";
};
llg:
{
    dt = 0.2e-15;
    applied = [ 0.0 , 0.0 , 0.0 ];
    update=100;
    MagnetizationCalculationMethod=7;
    OutputMagnetization=TRUE;
};
cuda:
{
    threadsperblock=256;
};
sim:
{
//    sim_type = "MvT";
//    sim_type = "quick";
//    sim_type = "timeseries";
      sim_type="laserheating";
};
laserheating:
{
    Gamma_e = 2.25e2;
    Cl = 3.1e6;
    PumpTime = 50e-15;
    G_ep = 12.0e17;
    InitialTemperature=90.0;
    EquilibrationTime = 10.0e-12;
    RunTime = 0e-12;
    PumpFluence = 1e21;
    CoolingTime = 1000.0e-12;
    NumPulses = 1;
    PulseDelays = [ 150e-15 ];
    PulseScale = [ 1.0 ];
    OutputStructureFactor = FALSE;
};
