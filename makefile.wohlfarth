# Compilers
SHELL:=/bin/bash
GITINFO=-DGIT_SHA1='"$(shell git rev-parse HEAD)"' -DGITDIRTY='"$(shell git status -s | grep -v ? | wc -l)"'
GCC=g++ -DCOMP='"GNU C++ Compiler $(shell g++ --version | head -n 1 | cut -b 5-)"' -DHOSTNAME='"$(shell hostname)"' ${GITINFO}
NVCC=nvcc  -DCOMP='"NVIDIA C++ Compiler $(shell nvcc --version | tail -n 2 | head -n 1)"' -DHOSTNAME='"$(shell hostname)"'
export LANG=C
export LC_ALL=C
# LIBS
DEFS=-DNDEBUG
CUDEFS=-DCUDA
LIBS= -lfftw3 -lfftw3f -lm  -lstdc++ -llapack -lblas# -lconfig++
STATIC_LINK=
CPULIBS= -fopenmp -lpthread
CUDALIBS= -L/usr/local/cuda/lib64/ -lcurand -lcudart -lcufft
STATIC_LINK=/usr/local/lib/libconfig++.a
OPT_LEVEL=-O3
GCC_FLAGS= $(OPT_LEVEL)
#NVCC_FLAGS= -g $(OPT_LEVEL) -I/usr/local/cuda/include -m64 -ccbin /usr/bin/g++-4.4 --ptxas-options=-v -gencode=arch=compute_20,code=sm_20 -gencode=arch=compute_20,code=compute_20 
#NVCC_FLAGS= $(OPT_LEVEL) -I/usr/local/cuda/include -m64 -ccbin /usr/bin/g++-4.4 --ptxas-options=-v -gencode=arch=compute_13,code=sm_13 -gencode=arch=compute_13,code=compute_13 -gencode=arch=compute_20,code=sm_20 -gencode=arch=compute_20,code=compute_20 -gencode=arch=compute_30,code=sm_30 -gencode=arch=compute_30,code=compute_30
NVCC_FLAGS= $(OPT_LEVEL) -I/usr/local/cuda/include -m64 -ccbin /usr/bin/g++-4.4 --ptxas-options=-v -gencode=arch=compute_20,code=sm_20 -gencode=arch=compute_20,code=compute_20 -gencode=arch=compute_30,code=sm_30 -gencode=arch=compute_30,code=compute_30


# Objects
OBJECTS= \
obj_new/config.o \
obj_new/config_glob.o \
obj_new/error.o \
obj_new/random.o \
obj_new/geom_glob.o \
obj_new/geom.o \
obj_new/util.o \
obj_new/util_mag.o \
obj_new/intmat.o \
obj_new/spins.o \
obj_new/fields.o \
obj_new/exch.o \
obj_new/anis.o \
obj_new/llgCPU.o \
obj_new/maths.o \
obj_new/sim.o \
obj_new/mvt.o \
obj_new/suscep.o \
obj_new/matrix_conv.o \
obj_new/matrix_mul_cpu.o \
obj_new/sf.o \
obj_new/sf_glob.o \
obj_new/timeseries.o \
obj_new/laser_heating.o \
obj_new/exch_routines.o \
obj_new/exch_determine_exchange_matrix.o \
obj_new/exch_intmat.o \
obj_new/exch_permute_Sp.o \
obj_new/exch_direct_Sp.o \
obj_new/exch_mapint_Sp.o \
obj_new/ramp_field.o \
obj_new/exch_read_4_spin.o \
obj_new/thermal_hyst.o

SWITCHOBJ= \
obj_new/main.o \
obj_new/llg.o

NVCCOBJ= \
obj_new/cuda.o \
obj_new/cuda_glob.o \
obj_new/cuda_util.o \
obj_new/cufields.o \
obj_new/cuint.o

CUDA_OBJECTS=$(OBJECTS:.o=_cuda.o)
NVCC_OBJECTS=$(NVCCOBJ:.o=_cuda.o)
SWITCH_OBJECTS=$(SWITCHOBJ:.o=_cuda.o)

EXECUTABLE=ASD

all: $(OBJECTS) gcc

# Serial Targets
gcc: $(OBJECTS) $(SWITCHOBJ)
	$(GCC) $(DEFS) $(GCC_FLAGS) $(OBJECTS) $(SWITCHOBJ) $(STATIC_LINK) -o $(EXECUTABLE) $(LIBS)


$(OBJECTS): obj_new/%.o: src/%.cpp
	$(GCC) -c -o $@ $(DEFS) $(GCC_FLAGS) $<
$(SWITCHOBJ): obj_new/%.o: src/%.cpp
	$(GCC) -c -o $@ $(DEFS) $(GCC_FLAGS) $<


# cuda targets
gcc-cuda: $(SWITCH_OBJECTS) $(NVCC_OBJECTS) $(CUDA_OBJECTS)
	$(NVCC) $(CUDA_OBJECTS) $(SWITCH_OBJECTS) $(NVCC_OBJECTS) $(STATIC_LINK) $(CUDALIBS) $(LIBS) -o $(EXECUTABLE) $(DEFS)

$(CUDA_OBJECTS): obj_new/%_cuda.o: src/%.cpp
	$(GCC) -c -o $@ $(GCC_FLAGS) $(DEFS) $<

$(NVCC_OBJECTS) : obj_new/%_cuda.o: src/%.cu
	$(NVCC) $(NVCC_FLAGS) $(CUDEFS) $(DEFS) -c $< $(CUDALIBS) $(LIBS) -o $@

$(SWITCH_OBJECTS) : obj_new/%_cuda.o: src/%.cpp
	$(NVCC) $(NVCC_FLAGS) $(CUDEFS) $(DEFS) -c $< $(CUDALIBS) $(LIBS) -o $@

clean:
	@rm -f obj_new/*.o

purge:
	@rm -f obj_new/*.o
	@rm -f $(EXECUTABLE)

tidy:	
	@rm -f *~
	@rm -f src/*~
